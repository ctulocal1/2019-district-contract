import Random from '../../random/generator/Random';
import Arbitrary from '../arbitrary/definition/Arbitrary';
import Shrinkable from '../arbitrary/definition/Shrinkable';
import { IProperty } from './IProperty';
/**
 * Asynchronous property, see {@link IProperty}
 *
 * Prefer using {@link asyncProperty} instead
 */
export declare class AsyncProperty<Ts> implements IProperty<Ts> {
    readonly arb: Arbitrary<Ts>;
    readonly predicate: (t: Ts) => Promise<boolean | void>;
    constructor(arb: Arbitrary<Ts>, predicate: (t: Ts) => Promise<boolean | void>);
    isAsync: () => boolean;
    generate(mrng: Random, runId?: number): Shrinkable<Ts>;
    run(v: Ts): Promise<string | null>;
}
