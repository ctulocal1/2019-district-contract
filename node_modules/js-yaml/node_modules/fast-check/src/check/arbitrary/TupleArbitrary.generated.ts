import Arbitrary from './definition/Arbitrary';
import Shrinkable from './definition/Shrinkable';
import Random from '../../random/generator/Random';
import { GenericTupleArbitrary } from './TupleArbitrary.generic';

        /** @hidden */
        export class Tuple1Arbitrary<T0> extends Arbitrary<[T0]> {
            readonly tupleArb: GenericTupleArbitrary<T0>;
            constructor(readonly arb0: Arbitrary<T0>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0>([arb0]);
            }
            generate(mrng: Random): Shrinkable<[T0]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0]>;
            }
            withBias(freq: number) {
                return new Tuple1Arbitrary(this.arb0.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple2Arbitrary<T0,T1> extends Arbitrary<[T0,T1]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1>([arb0,arb1]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1]>;
            }
            withBias(freq: number) {
                return new Tuple2Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple3Arbitrary<T0,T1,T2> extends Arbitrary<[T0,T1,T2]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2>([arb0,arb1,arb2]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2]>;
            }
            withBias(freq: number) {
                return new Tuple3Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple4Arbitrary<T0,T1,T2,T3> extends Arbitrary<[T0,T1,T2,T3]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3>([arb0,arb1,arb2,arb3]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3]>;
            }
            withBias(freq: number) {
                return new Tuple4Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple5Arbitrary<T0,T1,T2,T3,T4> extends Arbitrary<[T0,T1,T2,T3,T4]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4>([arb0,arb1,arb2,arb3,arb4]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4]>;
            }
            withBias(freq: number) {
                return new Tuple5Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple6Arbitrary<T0,T1,T2,T3,T4,T5> extends Arbitrary<[T0,T1,T2,T3,T4,T5]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5>([arb0,arb1,arb2,arb3,arb4,arb5]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5]>;
            }
            withBias(freq: number) {
                return new Tuple6Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple7Arbitrary<T0,T1,T2,T3,T4,T5,T6> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6>([arb0,arb1,arb2,arb3,arb4,arb5,arb6]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6]>;
            }
            withBias(freq: number) {
                return new Tuple7Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple8Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7]>;
            }
            withBias(freq: number) {
                return new Tuple8Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple9Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8]>;
            }
            withBias(freq: number) {
                return new Tuple9Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple10Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9]>;
            }
            withBias(freq: number) {
                return new Tuple10Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple11Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10]>;
            }
            withBias(freq: number) {
                return new Tuple11Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple12Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11]>;
            }
            withBias(freq: number) {
                return new Tuple12Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple13Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12]>;
            }
            withBias(freq: number) {
                return new Tuple13Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple14Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13]>;
            }
            withBias(freq: number) {
                return new Tuple14Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple15Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>,readonly arb14: Arbitrary<T14>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13,arb14]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14]>;
            }
            withBias(freq: number) {
                return new Tuple15Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq),this.arb14.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple16Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>,readonly arb14: Arbitrary<T14>,readonly arb15: Arbitrary<T15>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13,arb14,arb15]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15]>;
            }
            withBias(freq: number) {
                return new Tuple16Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq),this.arb14.withBias(freq),this.arb15.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple17Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>,readonly arb14: Arbitrary<T14>,readonly arb15: Arbitrary<T15>,readonly arb16: Arbitrary<T16>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13,arb14,arb15,arb16]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16]>;
            }
            withBias(freq: number) {
                return new Tuple17Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq),this.arb14.withBias(freq),this.arb15.withBias(freq),this.arb16.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple18Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>,readonly arb14: Arbitrary<T14>,readonly arb15: Arbitrary<T15>,readonly arb16: Arbitrary<T16>,readonly arb17: Arbitrary<T17>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13,arb14,arb15,arb16,arb17]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17]>;
            }
            withBias(freq: number) {
                return new Tuple18Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq),this.arb14.withBias(freq),this.arb15.withBias(freq),this.arb16.withBias(freq),this.arb17.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple19Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17|T18>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>,readonly arb14: Arbitrary<T14>,readonly arb15: Arbitrary<T15>,readonly arb16: Arbitrary<T16>,readonly arb17: Arbitrary<T17>,readonly arb18: Arbitrary<T18>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17|T18>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13,arb14,arb15,arb16,arb17,arb18]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18]>;
            }
            withBias(freq: number) {
                return new Tuple19Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq),this.arb14.withBias(freq),this.arb15.withBias(freq),this.arb16.withBias(freq),this.arb17.withBias(freq),this.arb18.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple20Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17|T18|T19>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>,readonly arb14: Arbitrary<T14>,readonly arb15: Arbitrary<T15>,readonly arb16: Arbitrary<T16>,readonly arb17: Arbitrary<T17>,readonly arb18: Arbitrary<T18>,readonly arb19: Arbitrary<T19>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17|T18|T19>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13,arb14,arb15,arb16,arb17,arb18,arb19]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19]>;
            }
            withBias(freq: number) {
                return new Tuple20Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq),this.arb14.withBias(freq),this.arb15.withBias(freq),this.arb16.withBias(freq),this.arb17.withBias(freq),this.arb18.withBias(freq),this.arb19.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple21Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17|T18|T19|T20>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>,readonly arb14: Arbitrary<T14>,readonly arb15: Arbitrary<T15>,readonly arb16: Arbitrary<T16>,readonly arb17: Arbitrary<T17>,readonly arb18: Arbitrary<T18>,readonly arb19: Arbitrary<T19>,readonly arb20: Arbitrary<T20>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17|T18|T19|T20>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13,arb14,arb15,arb16,arb17,arb18,arb19,arb20]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20]>;
            }
            withBias(freq: number) {
                return new Tuple21Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq),this.arb14.withBias(freq),this.arb15.withBias(freq),this.arb16.withBias(freq),this.arb17.withBias(freq),this.arb18.withBias(freq),this.arb19.withBias(freq),this.arb20.withBias(freq));
            }
        };
    

        /** @hidden */
        export class Tuple22Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21> extends Arbitrary<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21]> {
            readonly tupleArb: GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17|T18|T19|T20|T21>;
            constructor(readonly arb0: Arbitrary<T0>,readonly arb1: Arbitrary<T1>,readonly arb2: Arbitrary<T2>,readonly arb3: Arbitrary<T3>,readonly arb4: Arbitrary<T4>,readonly arb5: Arbitrary<T5>,readonly arb6: Arbitrary<T6>,readonly arb7: Arbitrary<T7>,readonly arb8: Arbitrary<T8>,readonly arb9: Arbitrary<T9>,readonly arb10: Arbitrary<T10>,readonly arb11: Arbitrary<T11>,readonly arb12: Arbitrary<T12>,readonly arb13: Arbitrary<T13>,readonly arb14: Arbitrary<T14>,readonly arb15: Arbitrary<T15>,readonly arb16: Arbitrary<T16>,readonly arb17: Arbitrary<T17>,readonly arb18: Arbitrary<T18>,readonly arb19: Arbitrary<T19>,readonly arb20: Arbitrary<T20>,readonly arb21: Arbitrary<T21>) {
                super();
                this.tupleArb = new GenericTupleArbitrary<T0|T1|T2|T3|T4|T5|T6|T7|T8|T9|T10|T11|T12|T13|T14|T15|T16|T17|T18|T19|T20|T21>([arb0,arb1,arb2,arb3,arb4,arb5,arb6,arb7,arb8,arb9,arb10,arb11,arb12,arb13,arb14,arb15,arb16,arb17,arb18,arb19,arb20,arb21]);
            }
            generate(mrng: Random): Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21]> {
                return this.tupleArb.generate(mrng) as Shrinkable<[T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21]>;
            }
            withBias(freq: number) {
                return new Tuple22Arbitrary(this.arb0.withBias(freq),this.arb1.withBias(freq),this.arb2.withBias(freq),this.arb3.withBias(freq),this.arb4.withBias(freq),this.arb5.withBias(freq),this.arb6.withBias(freq),this.arb7.withBias(freq),this.arb8.withBias(freq),this.arb9.withBias(freq),this.arb10.withBias(freq),this.arb11.withBias(freq),this.arb12.withBias(freq),this.arb13.withBias(freq),this.arb14.withBias(freq),this.arb15.withBias(freq),this.arb16.withBias(freq),this.arb17.withBias(freq),this.arb18.withBias(freq),this.arb19.withBias(freq),this.arb20.withBias(freq),this.arb21.withBias(freq));
            }
        };
    

        /**
         * For tuples of [T0]
         * @param arb0 Arbitrary responsible for T0
         */
        function tuple<T0>(
                arb0: Arbitrary<T0>
                ): Tuple1Arbitrary<T0>;

        /**
         * For tuples of [T0,T1]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
         */
        function tuple<T0,T1>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>
                ): Tuple2Arbitrary<T0,T1>;

        /**
         * For tuples of [T0,T1,T2]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
         */
        function tuple<T0,T1,T2>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>
                ): Tuple3Arbitrary<T0,T1,T2>;

        /**
         * For tuples of [T0,T1,T2,T3]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
         */
        function tuple<T0,T1,T2,T3>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>
                ): Tuple4Arbitrary<T0,T1,T2,T3>;

        /**
         * For tuples of [T0,T1,T2,T3,T4]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
         */
        function tuple<T0,T1,T2,T3,T4>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>
                ): Tuple5Arbitrary<T0,T1,T2,T3,T4>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
         */
        function tuple<T0,T1,T2,T3,T4,T5>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>
                ): Tuple6Arbitrary<T0,T1,T2,T3,T4,T5>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>
                ): Tuple7Arbitrary<T0,T1,T2,T3,T4,T5,T6>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>
                ): Tuple8Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>
                ): Tuple9Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>
                ): Tuple10Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>
                ): Tuple11Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>
                ): Tuple12Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>
                ): Tuple13Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>
                ): Tuple14Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>,arb14: Arbitrary<T14>
                ): Tuple15Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
* @param arb15 Arbitrary responsible for T15
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>,arb14: Arbitrary<T14>,arb15: Arbitrary<T15>
                ): Tuple16Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
* @param arb15 Arbitrary responsible for T15
* @param arb16 Arbitrary responsible for T16
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>,arb14: Arbitrary<T14>,arb15: Arbitrary<T15>,arb16: Arbitrary<T16>
                ): Tuple17Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
* @param arb15 Arbitrary responsible for T15
* @param arb16 Arbitrary responsible for T16
* @param arb17 Arbitrary responsible for T17
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>,arb14: Arbitrary<T14>,arb15: Arbitrary<T15>,arb16: Arbitrary<T16>,arb17: Arbitrary<T17>
                ): Tuple18Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
* @param arb15 Arbitrary responsible for T15
* @param arb16 Arbitrary responsible for T16
* @param arb17 Arbitrary responsible for T17
* @param arb18 Arbitrary responsible for T18
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>,arb14: Arbitrary<T14>,arb15: Arbitrary<T15>,arb16: Arbitrary<T16>,arb17: Arbitrary<T17>,arb18: Arbitrary<T18>
                ): Tuple19Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
* @param arb15 Arbitrary responsible for T15
* @param arb16 Arbitrary responsible for T16
* @param arb17 Arbitrary responsible for T17
* @param arb18 Arbitrary responsible for T18
* @param arb19 Arbitrary responsible for T19
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>,arb14: Arbitrary<T14>,arb15: Arbitrary<T15>,arb16: Arbitrary<T16>,arb17: Arbitrary<T17>,arb18: Arbitrary<T18>,arb19: Arbitrary<T19>
                ): Tuple20Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
* @param arb15 Arbitrary responsible for T15
* @param arb16 Arbitrary responsible for T16
* @param arb17 Arbitrary responsible for T17
* @param arb18 Arbitrary responsible for T18
* @param arb19 Arbitrary responsible for T19
* @param arb20 Arbitrary responsible for T20
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>,arb14: Arbitrary<T14>,arb15: Arbitrary<T15>,arb16: Arbitrary<T16>,arb17: Arbitrary<T17>,arb18: Arbitrary<T18>,arb19: Arbitrary<T19>,arb20: Arbitrary<T20>
                ): Tuple21Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
* @param arb15 Arbitrary responsible for T15
* @param arb16 Arbitrary responsible for T16
* @param arb17 Arbitrary responsible for T17
* @param arb18 Arbitrary responsible for T18
* @param arb19 Arbitrary responsible for T19
* @param arb20 Arbitrary responsible for T20
* @param arb21 Arbitrary responsible for T21
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(
                arb0: Arbitrary<T0>,arb1: Arbitrary<T1>,arb2: Arbitrary<T2>,arb3: Arbitrary<T3>,arb4: Arbitrary<T4>,arb5: Arbitrary<T5>,arb6: Arbitrary<T6>,arb7: Arbitrary<T7>,arb8: Arbitrary<T8>,arb9: Arbitrary<T9>,arb10: Arbitrary<T10>,arb11: Arbitrary<T11>,arb12: Arbitrary<T12>,arb13: Arbitrary<T13>,arb14: Arbitrary<T14>,arb15: Arbitrary<T15>,arb16: Arbitrary<T16>,arb17: Arbitrary<T17>,arb18: Arbitrary<T18>,arb19: Arbitrary<T19>,arb20: Arbitrary<T20>,arb21: Arbitrary<T21>
                ): Tuple22Arbitrary<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>;

        /**
         * For tuples of [T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21]
         * @param arb0 Arbitrary responsible for T0
* @param arb1 Arbitrary responsible for T1
* @param arb2 Arbitrary responsible for T2
* @param arb3 Arbitrary responsible for T3
* @param arb4 Arbitrary responsible for T4
* @param arb5 Arbitrary responsible for T5
* @param arb6 Arbitrary responsible for T6
* @param arb7 Arbitrary responsible for T7
* @param arb8 Arbitrary responsible for T8
* @param arb9 Arbitrary responsible for T9
* @param arb10 Arbitrary responsible for T10
* @param arb11 Arbitrary responsible for T11
* @param arb12 Arbitrary responsible for T12
* @param arb13 Arbitrary responsible for T13
* @param arb14 Arbitrary responsible for T14
* @param arb15 Arbitrary responsible for T15
* @param arb16 Arbitrary responsible for T16
* @param arb17 Arbitrary responsible for T17
* @param arb18 Arbitrary responsible for T18
* @param arb19 Arbitrary responsible for T19
* @param arb20 Arbitrary responsible for T20
* @param arb21 Arbitrary responsible for T21
         */
        function tuple<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21>(
                arb0?: Arbitrary<T0>,arb1?: Arbitrary<T1>,arb2?: Arbitrary<T2>,arb3?: Arbitrary<T3>,arb4?: Arbitrary<T4>,arb5?: Arbitrary<T5>,arb6?: Arbitrary<T6>,arb7?: Arbitrary<T7>,arb8?: Arbitrary<T8>,arb9?: Arbitrary<T9>,arb10?: Arbitrary<T10>,arb11?: Arbitrary<T11>,arb12?: Arbitrary<T12>,arb13?: Arbitrary<T13>,arb14?: Arbitrary<T14>,arb15?: Arbitrary<T15>,arb16?: Arbitrary<T16>,arb17?: Arbitrary<T17>,arb18?: Arbitrary<T18>,arb19?: Arbitrary<T19>,arb20?: Arbitrary<T20>,arb21?: Arbitrary<T21>
                ) {

        if (arb21) {
            return new Tuple22Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>,arb14 as Arbitrary<T14>,arb15 as Arbitrary<T15>,arb16 as Arbitrary<T16>,arb17 as Arbitrary<T17>,arb18 as Arbitrary<T18>,arb19 as Arbitrary<T19>,arb20 as Arbitrary<T20>,arb21 as Arbitrary<T21>
            );
        }

        if (arb20) {
            return new Tuple21Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>,arb14 as Arbitrary<T14>,arb15 as Arbitrary<T15>,arb16 as Arbitrary<T16>,arb17 as Arbitrary<T17>,arb18 as Arbitrary<T18>,arb19 as Arbitrary<T19>,arb20 as Arbitrary<T20>
            );
        }

        if (arb19) {
            return new Tuple20Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>,arb14 as Arbitrary<T14>,arb15 as Arbitrary<T15>,arb16 as Arbitrary<T16>,arb17 as Arbitrary<T17>,arb18 as Arbitrary<T18>,arb19 as Arbitrary<T19>
            );
        }

        if (arb18) {
            return new Tuple19Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>,arb14 as Arbitrary<T14>,arb15 as Arbitrary<T15>,arb16 as Arbitrary<T16>,arb17 as Arbitrary<T17>,arb18 as Arbitrary<T18>
            );
        }

        if (arb17) {
            return new Tuple18Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>,arb14 as Arbitrary<T14>,arb15 as Arbitrary<T15>,arb16 as Arbitrary<T16>,arb17 as Arbitrary<T17>
            );
        }

        if (arb16) {
            return new Tuple17Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>,arb14 as Arbitrary<T14>,arb15 as Arbitrary<T15>,arb16 as Arbitrary<T16>
            );
        }

        if (arb15) {
            return new Tuple16Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>,arb14 as Arbitrary<T14>,arb15 as Arbitrary<T15>
            );
        }

        if (arb14) {
            return new Tuple15Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>,arb14 as Arbitrary<T14>
            );
        }

        if (arb13) {
            return new Tuple14Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>,arb13 as Arbitrary<T13>
            );
        }

        if (arb12) {
            return new Tuple13Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>,arb12 as Arbitrary<T12>
            );
        }

        if (arb11) {
            return new Tuple12Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>,arb11 as Arbitrary<T11>
            );
        }

        if (arb10) {
            return new Tuple11Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>,arb10 as Arbitrary<T10>
            );
        }

        if (arb9) {
            return new Tuple10Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>,arb9 as Arbitrary<T9>
            );
        }

        if (arb8) {
            return new Tuple9Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>,arb8 as Arbitrary<T8>
            );
        }

        if (arb7) {
            return new Tuple8Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>,arb7 as Arbitrary<T7>
            );
        }

        if (arb6) {
            return new Tuple7Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>,arb6 as Arbitrary<T6>
            );
        }

        if (arb5) {
            return new Tuple6Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>,arb5 as Arbitrary<T5>
            );
        }

        if (arb4) {
            return new Tuple5Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>,arb4 as Arbitrary<T4>
            );
        }

        if (arb3) {
            return new Tuple4Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>,arb3 as Arbitrary<T3>
            );
        }

        if (arb2) {
            return new Tuple3Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>,arb2 as Arbitrary<T2>
            );
        }

        if (arb1) {
            return new Tuple2Arbitrary(
                arb0 as Arbitrary<T0>,arb1 as Arbitrary<T1>
            );
        }

        if (arb0) {
            return new Tuple1Arbitrary(
                arb0 as Arbitrary<T0>
            );
        }
}
export { tuple };